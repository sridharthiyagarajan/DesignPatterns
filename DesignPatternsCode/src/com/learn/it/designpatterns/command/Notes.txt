**** BEHAVIOURAL PATTERN ****

1. Encapsulates Requests: 
Wraps a request as an object, allowing parameterization, queuing, and logging of operations.

2. Decouples Sender & Receiver: 
The client (Invoker) issues commands without knowing the exact receiver, promoting flexibility.

3. Real-World Use Cases: 
Used in undo/redo functionality, task scheduling, and remote control systems.