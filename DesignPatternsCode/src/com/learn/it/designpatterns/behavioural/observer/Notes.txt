**** BEHAVIOURAL PATTERN ****

1. One-to-Many Dependency: 
When one object (Subject) changes state, all its dependent objects (Observers) are notified automatically.

2. Decouples Components: 
Promotes loose coupling between Subject and Observers, enhancing flexibility and maintainability.

3. Real-World Use Cases: 
Used in event-driven systems, GUI frameworks, and publish-subscribe messaging models.